{"version":3,"sources":["../../es6/collector/fibonacci.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAgBA,IAAI,YAAY,QAAQ,+CAAR,EAAyD,IAAzD,CAA8D,IAA9D,EAAoE,CAClF,CADkF,EAC/E,GAD+E,EAC1E,IAD0E,EACpE,IADoE,EAC9D,IAD8D,EACxD,IADwD,EAClD,KADkD,EAC3C,KAD2C,EACpC,KADoC,EAC7B,KAD6B,EACtB,KADsB,EACf,IADe,EAElF,MAFkF,EAE1E,MAF0E,EAElE,MAFkE,EAE1D,MAF0D,EAElD,MAFkD,EAE1C,MAF0C,EAElC,OAFkC,EAEzB,OAFyB,EAEhB,OAFgB,EAGlF,OAHkF,EAGzE,QAHyE,CAApE,CAAZ;;AAMJ,SAAS,kBAAT,GAA8B;AAC5B,OAAK,KAAL,GAD4B;CAA9B;;;AAKA,mBAAmB,SAAnB,CAA6B,KAA7B,GAAqC,gCAAiC;AACpE,SAAO,KAAK,QAAL,CAD6D;CAAjC;;;;AAMrC,mBAAmB,SAAnB,CAA6B,KAA7B,GAAqC,UAAU,qBAAV,eAA+C;AAClF,SAAO,EAAG,KAAK,QAAL,CAAc,UAAU,OAAV,CAAd,CAAH,CAD2E;CAA/C;;;AAKrC,mBAAmB,SAAnB,CAA6B,KAA7B,GAAqC,qCAAsC;AACzE,OAAK,QAAL,GAAgB,CACd,CADc,EACX,CADW,EACR,CADQ,EACL,CADK,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EACU,CADV,EACa,CADb,EACgB,CADhB,EACmB,CADnB,EACsB,CADtB,EACyB,CADzB,EAC4B,CAD5B,EAC+B,CAD/B,EACkC,CADlC,EACqC,CADrC,EACwC,CADxC,EAC2C,CAD3C,EAC8C,CAD9C,EACiD,CADjD,EACoD,CADpD,EACuD,CADvD,CAAhB,CADyE;;AAKzE,SAAO,IAAP,CALyE;CAAtC;;;AASrC,mBAAmB,SAAnB,CAA6B,MAA7B,GAAsC,YAAY;AAChD,SAAO,KAAK,QAAL,CADyC;CAAZ;;;AAKtC,mBAAmB,SAAnB,CAA6B,OAA7B,GAAuC,YAAY;AACjD,SAAO,KAAK,QAAL,CAAc,MAAd,CAAqB,UAAC,GAAD,EAAM,CAAN;WAAY,OAAO,CAAP;GAAZ,EAAsB,CAA3C,MAAkD,CAAlD,CAD0C;CAAZ;;AAIvC,OAAO,OAAP,GAAiB,SAAS,yBAAT,GAAqC;AACpD,SAAO,IAAI,kBAAJ,EAAP,CADoD;CAArC","file":"fibonacci.js","sourcesContent":["/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\nlet findIndex = require('@splitsoftware/splitio-utils/lib/binarySearch').bind(null, [\n  1, 1.5, 2.25, 3.38, 5.06, 7.59, 11.39, 17.09, 25.63, 38.44, 57.67, 86.5,\n  129.75, 194.62, 291.93, 437.89, 656.84, 985.26, 1477.89, 2216.84, 3325.26,\n  4987.89, 77481.83\n]);\n\nfunction FibonacciCollector() {\n  this.clear();\n}\n\n// Latency counters based on the internal ranges\nFibonacciCollector.prototype.state = function () /*: array<number> */ {\n  return this.counters;\n};\n\n// Store latency and return the number of occurrencies inside the range\n// defined\nFibonacciCollector.prototype.track = function (latency /*: number */) /*: number */ {\n  return ++(this.counters[findIndex(latency)]);\n};\n\n// Recycle the collector (reset using 0 for all the counters)\nFibonacciCollector.prototype.clear = function () /*: FibonacciCollector */ {\n  this.counters = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n  ];\n\n  return this;\n};\n\n// Hook JSON.stringify to expose the state of the counters\nFibonacciCollector.prototype.toJSON = function () {\n  return this.counters;\n};\n\n// Check if the is data changed from the defaults\nFibonacciCollector.prototype.isEmpty = function () {\n  return this.counters.reduce((sum, e) => sum += e, 0) === 0;\n};\n\nmodule.exports = function FibonacciCollectorFactory() {\n  return new FibonacciCollector();\n};\n"]}