{
  "name": "@splitsoftware/splitio",
  "version": "10.23.1",
  "description": "Split SDK",
  "files": [
    "README.md",
    "CONTRIBUTORS-GUIDE.md",
    "LICENSE",
    "CHANGES.txt",
    "lib",
    "types",
    "es",
    "src",
    "scripts/ga-to-split-autorequire.js",
    "client",
    "server"
  ],
  "repository": "splitio/javascript-client",
  "homepage": "https://github.com/splitio/javascript-client#readme",
  "bugs": "https://github.com/splitio/javascript-client/issues",
  "license": "Apache-2.0",
  "author": "Facundo Cabrera <facundo@split.io>",
  "contributors": [
    {
      "name": "Nico Zelaya",
      "email": "nicolas.zelaya@split.io",
      "url": "https://github.com/NicoZelaya"
    }
  ],
  "keywords": [
    "splitio",
    "sdk",
    "javascript"
  ],
  "main": "lib/index.js",
  "module": "es/index.js",
  "types": "types",
  "engines": {
    "npm": ">=3",
    "node": ">=6"
  },
  "dependencies": {
    "@splitsoftware/splitio-commons": "1.9.1",
    "@types/google.analytics": "0.0.40",
    "@types/ioredis": "^4.28.0",
    "bloom-filters": "^3.0.0",
    "ioredis": "^4.28.0",
    "js-yaml": "^3.13.1",
    "node-fetch": "^2.6.7",
    "unfetch": "^4.2.0"
  },
  "optionalDependencies": {
    "eventsource": "^1.1.2"
  },
  "devDependencies": {
    "@types/node-fetch": "^2.5.12",
    "@types/seedrandom": "^3.0.2",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "csv-streamify": "4.0.0",
    "eslint": "^8.48.0",
    "eslint-plugin-compat": "^4.2.0",
    "eslint-plugin-import": "^2.25.4",
    "fetch-mock": "^9.11.0",
    "karma": "^6.3.16",
    "karma-chrome-launcher": "^3.1.0",
    "karma-tap": "^4.2.0",
    "karma-webpack": "^5.0.0",
    "lodash": "^4.17.21",
    "node-polyfill-webpack-plugin": "^1.1.4",
    "proxyquire": "^2.1.3",
    "puppeteer": "^3.3.0",
    "redis-dumpz": "0.1.12",
    "redis-server": "1.2.2",
    "replace": "^1.2.1",
    "rimraf": "^3.0.2",
    "sinon": "^9.2.4",
    "tap-min": "^2.0.0",
    "tape": "4.13.2",
    "tape-catch": "1.0.6",
    "ts-loader": "^9.2.6",
    "ts-node": "^10.5.0",
    "typescript": "4.4.4",
    "webpack": "^5.53.0",
    "webpack-cli": "^4.8.0",
    "webpack-merge": "^5.8.0"
  },
  "scripts": {
    "build-esm": "rimraf es && tsc -outDir es",
    "postbuild-esm": "cross-env NODE_ENV=es node scripts/copy.packages.json.js && ./scripts/build_esm_replace_imports.sh",
    "build-umd:stats": "webpack --progress --env production --json > ./stats/stat_results.json",
    "build-cjs": "rimraf lib && tsc -outDir lib -m CommonJS",
    "postbuild-cjs": "cross-env NODE_ENV=cjs node scripts/copy.packages.json.js && ./scripts/build_cjs_replace_imports.sh",
    "build-umd": "webpack --config webpack.dev.js --env branch=$BUILD_BRANCH && webpack --config webpack.prod.js --env branch=$BUILD_BRANCH && ./scripts/clean_umd_build.sh",
    "build:npm": "rimraf lib es && npm run build-cjs && npm run build-esm",
    "build:ga-to-split-autorequire": "terser ./node_modules/@splitsoftware/splitio-commons/src/integrations/ga/autoRequire.js --mangle --output ./scripts/ga-to-split-autorequire.js && cp ./scripts/ga-to-split-autorequire.js umd/ga-to-split-autorequire.js",
    "build": "rimraf lib umd es && npm run build-cjs && npm run build-esm && npm run build-umd",
    "check": "npm run check:lint && npm run check:version",
    "check:lint": "eslint src",
    "check:version": "cross-env NODE_ENV=test tape -r ./ts-node.register src/settings/__tests__/defaults.spec.js",
    "test-browser": "npm run test-browser-unit && npm run test-browser-e2e",
    "test-browser-unit": "cross-env NODE_ENV=test karma start karma/unit.karma.conf.js",
    "test-browser-e2e": "npm run test-browser-e2e-online && npm run test-browser-e2e-offline && npm run test-browser-e2e-destroy && npm run test-browser-e2e-errorCatching && npm run test-browser-e2e-push && npm run test-browser-e2e-gaIntegration",
    "test-browser-e2e-online": "cross-env NODE_ENV=test karma start karma/e2e.online.karma.conf.js",
    "test-browser-e2e-offline": "cross-env NODE_ENV=test karma start karma/e2e.offline.karma.conf.js",
    "test-browser-e2e-destroy": "cross-env NODE_ENV=test karma start karma/e2e.destroy.karma.conf.js",
    "test-browser-e2e-errorCatching": "cross-env NODE_ENV=test karma start karma/e2e.errorCatching.karma.conf.js",
    "test-browser-e2e-push": "cross-env NODE_ENV=test karma start karma/e2e.push.karma.conf.js",
    "test-browser-e2e-gaIntegration": "cross-env NODE_ENV=test karma start karma/e2e.gaIntegration.karma.conf.js",
    "test-node": "npm run test-node-unit && npm run test-node-e2e",
    "test-node-unit": "cross-env NODE_ENV=test tape -r ./ts-node.register \"src/*/**/__tests__/**/!(browser).spec.js\" | tap-min",
    "test-node-e2e": "npm run test-node-e2e-online && npm run test-node-e2e-offline && npm run test-node-e2e-destroy && npm run test-node-e2e-errorCatching && npm run test-node-e2e-push && npm run test-node-e2e-redis",
    "test-node-e2e-online": "cross-env NODE_ENV=test tape -r ./ts-node.register src/__tests__/online/node.spec.js | tap-min",
    "test-node-e2e-offline": "cross-env NODE_ENV=test tape -r ./ts-node.register src/__tests__/offline/node.spec.js | tap-min",
    "test-node-e2e-destroy": "cross-env NODE_ENV=test tape -r ./ts-node.register src/__tests__/destroy/node.spec.js | tap-min",
    "test-node-e2e-errorCatching": "cross-env NODE_ENV=test tape -r ./ts-node.register src/__tests__/errorCatching/node.spec.js | tap-min",
    "test-node-e2e-push": "cross-env NODE_ENV=test tape -r ./ts-node.register src/__tests__/push/node.spec.js | tap-min",
    "test-node-e2e-redis": "cross-env NODE_ENV=test tape -r ./ts-node.register src/__tests__/consumer/node_redis.spec.js | tap-min",
    "pretest-ts-decls": "npm run build-esm && npm run build-cjs && npm link",
    "test-ts-decls": "./scripts/ts-tests.sh",
    "posttest-ts-decls": "npm rm --location=global @splitsoftware/splitio && npm install",
    "test": "npm run test-node && npm run test-browser",
    "all": "npm run check && npm run build && npm run test-ts-decls && npm run test",
    "publish:rc": "npm run check && npm run build && npm publish --tag canary",
    "publish:stable": "npm run check && npm run build && npm publish"
  },
  "greenkeeper": {
    "ignore": [
      "karma",
      "karma-tap",
      "karma-webpack"
    ]
  }
}
