{
  "name": "@splitsoftware/splitio",
  "version": "10.17.1",
  "description": "Split SDK",
  "files": [
    "README.md",
    "CONTRIBUTORS-GUIDE.md",
    "LICENSE",
    "CHANGES.txt",
    "lib",
    "types/*.d.ts",
    "es",
    "src"
  ],
  "repository": "splitio/javascript-client",
  "homepage": "https://github.com/splitio/javascript-client#readme",
  "bugs": "https://github.com/splitio/javascript-client/issues",
  "license": "Apache-2.0",
  "author": "Facundo Cabrera <facundo@split.io>",
  "contributors": [
    {
      "name": "Nico Zelaya",
      "email": "nicolas.zelaya@split.io",
      "url": "https://github.com/NicoZelaya"
    }
  ],
  "main": "lib/index.js",
  "module": "es/index.js",
  "types": "types",
  "engines": {
    "npm": ">=3",
    "node": ">=6"
  },
  "dependencies": {
    "@babel/runtime": "^7.13.10",
    "@splitsoftware/splitio-commons": "^1.2.0",
    "@types/google.analytics": "0.0.40",
    "events": "3.1.0",
    "ioredis": "^4.28.0",
    "ip": "1.1.5",
    "js-yaml": "3.13.1",
    "node-fetch": "^2.6.1",
    "object-assign": "^4.1.1",
    "unfetch": "^4.2.0"
  },
  "optionalDependencies": {
    "eventsource": "^1.0.7"
  },
  "devDependencies": {
    "@babel/cli": "^7.15.7",
    "@babel/core": "^7.13.10",
    "@babel/plugin-transform-runtime": "^7.13.10",
    "@babel/preset-env": "^7.13.10",
    "@babel/register": "^7.13.8",
    "babel-loader": "^8.2.2",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "csv-streamify": "4.0.0",
    "eslint": "^8.0.1",
    "eslint-plugin-compat": "^3.13.0",
    "fetch-mock": "^9.11.0",
    "karma": "^6.3.2",
    "karma-chrome-launcher": "^3.1.0",
    "karma-tap": "4.1.4",
    "karma-webpack": "^5.0.0",
    "lodash": "^4.17.21",
    "node-polyfill-webpack-plugin": "^1.1.4",
    "proxyquire": "^2.1.3",
    "puppeteer": "^3.3.0",
    "redis-dumpz": "0.1.11",
    "redis-server": "1.2.2",
    "replace": "^1.2.1",
    "rimraf": "^3.0.2",
    "sinon": "^9.2.4",
    "tap-min": "^2.0.0",
    "tape": "4.13.2",
    "tape-catch": "1.0.6",
    "webpack": "^5.53.0",
    "webpack-cli": "^4.8.0",
    "webpack-merge": "^5.8.0"
  },
  "scripts": {
    "build-es": "rimraf es && cross-env NODE_ENV=es babel ./src -d es --ignore 'src/**/__tests__/*'",
    "postbuild-es": "cross-env NODE_ENV=es node scripts/copy.packages.json.js",
    "build-umd:stats": "webpack --progress --env production --json > ./stats/stat_results.json",
    "build-cjs": "rimraf lib && cross-env NODE_ENV=cjs babel ./src -d lib --ignore 'src/**/__tests__/*'",
    "postbuild-cjs": "cross-env NODE_ENV=cjs node scripts/copy.packages.json.js",
    "build-umd": "webpack --config webpack.ci.dev.js --env branch=$BUILD_BRANCH --env commit_hash=$BUILD_COMMIT && webpack --config webpack.ci.prod.js --env branch=$BUILD_BRANCH --env commit_hash=$BUILD_COMMIT && ./scripts/clean_umd_build.sh",
    "build-umd:local": "webpack --config webpack.dev.js && webpack --config webpack.prod.js && ./scripts/clean_umd_build.sh",
    "build:local": "rimraf lib umd es && npm run build-cjs && npm run build-es && npm run build-umd:local",
    "build:npm": "rimraf lib es && npm run build-cjs && npm run build-es",
    "build": "rimraf lib umd es && npm run build-cjs && npm run build-es && npm run build-umd",
    "check": "npm run check:lint && npm run check:version",
    "check:lint": "eslint src",
    "check:version": "cross-env NODE_ENV=test tape -r @babel/register src/utils/__tests__/settings/index.spec.js",
    "test-browser-local": "cross-env NODE_ENV=test karma start karma/local.karma.conf.js",
    "test-browser-e2e-local": "cross-env NODE_ENV=test karma start karma/e2e.local.karma.conf.js",
    "test-browser": "npm run test-browser-unit && npm run test-browser-online && npm run test-browser-offline && npm run test-browser-destroy && npm run test-browser-errors && npm run test-browser-push && npm run test-browser-gaintegration",
    "test-browser-unit": "cross-env NODE_ENV=test karma start karma/ci.karma.conf.js",
    "test-browser-online": "cross-env NODE_ENV=test karma start karma/e2e.ci.karma.conf.js",
    "test-browser-offline": "cross-env NODE_ENV=test karma start karma/offline.karma.conf.js",
    "test-browser-destroy": "cross-env NODE_ENV=test karma start karma/destroy.ci.karma.conf.js",
    "test-browser-errors": "cross-env NODE_ENV=test karma start karma/errors.ci.karma.conf.js",
    "test-browser-gaintegration": "cross-env NODE_ENV=test karma start karma/gaintegration.ci.karma.conf.js",
    "test-browser-push": "cross-env NODE_ENV=test karma start karma/push.ci.karma.conf.js",
    "test-node": "npm run test-node-unit && npm run test-node-online && npm run test-node-offline && npm run test-node-destroy && npm run test-node-errors && npm run test-node-push && npm run test-node-consumer-redis $$ npm run test-node-consumer-pluggable",
    "test-node-unit": "cross-env NODE_ENV=test tape -r @babel/register \"src/*/**/__tests__/**/!(browser).spec.js\" | tap-min",
    "test-node-online": "cross-env NODE_ENV=test tape -r @babel/register src/__tests__/node.spec.js | tap-min",
    "test-node-destroy": "cross-env NODE_ENV=test tape -r @babel/register src/__tests__/destroy/node.spec.js | tap-min",
    "test-node-errors": "cross-env NODE_ENV=test tape -r @babel/register src/__tests__/errorCatching/node.spec.js | tap-min",
    "test-node-offline": "cross-env NODE_ENV=test tape -r @babel/register src/__tests__/offline/node.spec.js | tap-min",
    "test-node-push": "cross-env NODE_ENV=test tape -r @babel/register src/__tests__/push/node.spec.js | tap-min",
    "test-node-consumer-redis": "cross-env NODE_ENV=test tape -r @babel/register \"src/__tests__/consumerMode/node_redis.spec.js\" | tap-min",
    "test-node-consumer-pluggable": "cross-env NODE_ENV=test tape -r @babel/register \"src/__tests__/consumerMode/node_pluggable.spec.js\" | tap-min",
    "pretest-ts-decls": "npm run build-es && npm run build-cjs && npm link",
    "test-ts-decls": "./scripts/ts-tests.sh",
    "posttest-ts-decls": "npm unlink && npm install",
    "test": "npm run test-node && npm run test-browser",
    "publish:rc": "npm run check && npm run build && npm publish --tag canary",
    "publish:stable": "npm run check && npm run build && npm publish"
  },
  "greenkeeper": {
    "ignore": [
      "karma",
      "karma-tap",
      "karma-webpack"
    ]
  }
}
